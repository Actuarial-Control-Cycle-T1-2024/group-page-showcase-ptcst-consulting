library(tidyverse)
library(readxl)
library(data.table)
ins_data = data.table(readRDS("Data/SuperLife Inforce Dataset.rds"))
setwd("C:/Users/tmadf/Desktop/SOA2024")
ins_data = data.table(readRDS("Data/SuperLife Inforce Dataset.rds"))
base_data = data.table(read_excel("Data/Altered Mortality Tables.xlsx", sheet = "example"))
example = ins_data[issue_year == 2023][1]
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
print(death_col)
surv_col = years_in_hrzn * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = horizon * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
example
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
print(death_col)
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = horizon * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
0.99877 * 0.9986973
print(death_col, surv_col)
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = horizon * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
0.9986973 * 0.998775
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = (horizon - 1) * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else if (i == age_after_hrzn + 1) {
c
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
surv_col = horizon * 3 + 2
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
0.998775 * 0.9986973 * 0.9986259 * 0.9985457 * 0.9984205
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = (horizon - 1) * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else if (i == age_after_hrzn + 1) {
c
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
surv_col = horizon * 3 + 2
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
0.998775 * 0.9986973 * 0.9986259 * 0.9985457
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv, "and single surv is", mort_table[i-1,..surv_col][[1]]))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = (horizon - 1) * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else if (i == age_after_hrzn + 1) {
c
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv, "and single surv is", mort_table[i-1,..surv_col][[1]]))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
surv_col = horizon * 3 + 2
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
0.998775 * 0.9976873
mort_table[40, 2] * mort_table[41, 5]
base_data[40, 2] * base_data[41, 5]
base_data[40, 2] * base_data[41, 5] * base_data[42, 8] * base_data[43, 11]
exp_payout = function(entry, mort_table, discount_rate) {
# Determine time horizon of mortality table to take full effect
horizon = ncol(mort_table) / 3 - 1
exp_payout = 0
cum_surv = 1
if (horizon > 0) {
years_in_hrzn = 0
# Start as X, first relevant entry is X+1
# If horizon has 3 years (the 4th is the final)
# Entry 40, 41, 42 are relevant to horizon
for (i in (entry$issue_age + 1):(entry$issue_age + horizon)) {
death_col = years_in_hrzn * 3 + 3
surv_col = (years_in_hrzn - 1) * 3 + 2
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cum surv (in year", years_in_hrzn+1, "of horizon) up to", i - 1, "birthday is", cum_surv, "and single surv is", mort_table[i-1,..surv_col][[1]]))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age)
}
print(paste("death between", i - 1, "and", i, "birthdays (in year", years_in_hrzn+1, "horizon) has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste("discount was", i - entry$issue_age))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
years_in_hrzn = years_in_hrzn + 1
}
}
# Age at which horizon has completed and they follow final mortality table
age_after_hrzn = entry$issue_age + horizon
surv_col = (horizon - 1) * 3 + 2
death_col = horizon * 3 + 3
print(death_col)
# Policy starts on issue_age birthday and ends on end_age birthday
# Life table row i is the surv prob from i-1 to i
for (i in (age_after_hrzn + 1):(entry$policy_end_age)) {
if (i == entry$issue_age + 1) {
exp_payout = exp_payout + mort_table[i, ..death_col][[1]] * (1 - discount_rate)
} else {
cum_surv = cum_surv * mort_table[i - 1, ..surv_col][[1]]
print(paste("current cumulative surv up to", i - 1, "birthday is", cum_surv, "and single surv is", mort_table[i-1,..surv_col][[1]]))
exp_payout = exp_payout + cum_surv * mort_table[i, ..death_col][[1]] * (1 - discount_rate)^(i - entry$issue_age + 1)
}
print(paste("death between", i - 1, "and", i, "birthdays has prob", cum_surv * mort_table[i, ..death_col][[1]]))
print(paste0("Accessed new surv (", i-1, ", ", surv_col, ") and death (", i,", ", death_col, ")"))
surv_col = horizon * 3 + 2
print(paste("discount is", i - entry$issue_age))
}
exp_payout * entry$face_amount
}
exp_payout(example, base_data, 0.02)
base_data[40, 2] * base_data[41, 5] * base_data[42, 8] * base_data[43, 11]
