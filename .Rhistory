if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
exp_payout = exp_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
exp_cost = exp_cost + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * total_yearly_fee * annuity_due(i - entry$issue_age, discount)
# print(paste("Prob of dying between", i-1, "and", i))
}
print(total_yearly_fee)
# print(paste("Mortality reduction", mort_reduction))
participations = rep(FALSE, 6)
for (i in 1:length(personal_effects)) {
names(participations)[i] = names(personal_effects)[i]
if (personal_effects[[i]]$participation) {
participations[i] = TRUE
}
}
list(normal_epv = normal_payout * entry$face_amount, reduced_epv = exp_payout * entry$face_amount, cost = exp_cost, programs = participations)
}
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
print(res$normal_epv - res$reduced_epv)
print(res$cost)
}
intervention_progs = list(
safety_campaigns = list(effect_l = 0.03, effect_u = 0.05, cost_l = 10, cost_u = 35, horizon = 1, signup = 0.7, sub_rate = 1),
annual_checkup = list(effect_l = 0.05, effect_u = 0.1, cost_l = 175, cost_u = 870, horizon = 5, signup = 1, sub_rate = 0.5),
discount_gym = list(effect_l = 0.03, effect_u = 0.06, cost_l = 175, cost_u = 870, horizon = 1, signup = 0.3, sub_rate = 0.5),
weight_mgmt = list(effect_l = 0.05, effect_u = 0.1, cost_l = 175, cost_u = 870, horizon = 1, signup = 0.6, sub_rate = 0.7),
cancer_prevention = list(effect_l = 0.05, effect_u = 0.1, cost_l = 20, cost_u = 85, horizon = 9, signup = 0.6, sub_rate = 1),
heart_screenings = list(effect_l = 0.05, effect_u = 0.1, cost_l = 90, cost_u = 345, horizon = 5, signup = 0.6, sub_rate = 0.65) # CHECK ABOUT THIS 1 coz it's like0
)
annuity_due = function(n, discount) {
(1 + discount) * (1-(1 + discount)^(-n))/discount
}
mort_table = as.vector(read_excel("Data/Altered Mortality Tables.xlsx", sheet = "standard"))[[1]]
mort_table[120] = Inf
ins_data = readRDS("Data/SuperLife Inforce Dataset.rds")
example = ins_data[issue_year == 2023][2]
exp_payout = function(intervention_progs, mort_table, entry, discount) {
personal_effects = list(
safety_campaigns = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
annual_checkup = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5),
discount_gym = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
weight_mgmt = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
cancer_prevention = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 9),
heart_screenings = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5)
)
# SIMULATING EFFECTS, COSTS AND PARTICIPATION IN INTERVENTIONS
total_yearly_fee = 0
for (idx in 1:length(intervention_progs)) {
prog = intervention_progs[[idx]]
name = names(intervention_progs)[idx]
if (runif(1) <= prog$signup) {
cost = prog$sub_rate * runif(1, prog$cost_l, prog$cost_u)
personal_effects[[name]] = list(
participation = TRUE,
effect = runif(1, prog$effect_l, prog$effect_u),
cost = cost,
horizon = prog$horizon
)
total_yearly_fee = total_yearly_fee + cost
}
}
# print(personal_effects)
mort_reduction = 0
cum_surv = 1
exp_payout = 0
exp_cost = 0
normal_payout = 0
# TO REMOVE
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
normal_payout = normal_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
# print(paste("Mortality reduction", mort_reduction))
# print(paste("Prob of dying between", i-1, "and", i))
}
cum_surv = 1
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
# Managing mortality reductions
for (p in 1:length(personal_effects)) {
prog = personal_effects[[p]]
if (prog$participation && i - entry$issue_age <= prog$horizon) {
# print(paste("Effect on", names(personal_effects)[p]))
mort_reduction = mort_reduction + prog$effect / prog$horizon
}
}
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
exp_payout = exp_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
exp_cost = exp_cost + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * total_yearly_fee * annuity_due(i - entry$issue_age, discount)
# print(paste("Prob of dying between", i-1, "and", i))
}
print(paste("Yearly:", total_yearly_fee))
# print(paste("Mortality reduction", mort_reduction))
participations = rep(FALSE, 6)
for (i in 1:length(personal_effects)) {
names(participations)[i] = names(personal_effects)[i]
if (personal_effects[[i]]$participation) {
participations[i] = TRUE
}
}
list(normal_epv = normal_payout * entry$face_amount, reduced_epv = exp_payout * entry$face_amount, cost = exp_cost, programs = participations)
}
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
print(paste("Reduction:", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
mean(res)
res
mean(results)
results
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = c(results, exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02))
print(paste("Reduction:", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
mean(results)
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
print(paste("Reduction:", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
results
mean(results)
results = c()
for (i in 1:1000) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
print(paste("Reduction:", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
mean(results)
sum(results)
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
print(paste("Reduction:", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
sum(results)
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
print(paste("Reduction:" res$normal_epv, "+", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
results = c()
for (i in 1:10) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
print(paste("Reduction:", res$normal_epv, "+", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
print(paste("Cost:", res$cost))
}
sum(results)
results
results = c()
for (i in 1:1000) {
# print(ins_data[issue_year == 2023][i])
res = exp_payout(intervention_progs, mort_table, ins_data[issue_year == 2023][i], 0.02)
results = c(results, res$normal_epv - res$reduced_epv - res$cost)
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
results
hist(results)
mean(results)
sum(results)
concat(list(a = 'b'), c(1,2,3)
)
append(list(a = 'b'), c(1,2,3)
)
results = data.table(normal_epv = NULL, reduced_epv = NULL, cost = NULL,
safety_campaigns = NULL
annual_checkup = NULL,
results = data.table(normal_epv = NULL, reduced_epv = NULL, cost = NULL,
safety_campaigns = NULL,
annual_checkup = NULL,
discount_gym = NULL,
weight_mgmt = NULL,
cancer_prevention = NULL,
heart_screenings = NULL)
results
results = data.table()
results
results[1, normal_epv := NULL]
results[, normal_epv:= NULL]
results = data.frame(normal_epv = NULL, reduced_epv = NULL, cost = NULL,
safety_campaigns = NULL,
annual_checkup = NULL,
discount_gym = NULL,
weight_mgmt = NULL,
cancer_prevention = NULL,
heart_screenings = NULL)
results
results = data.frame(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = 0,
annual_checkup = 0,
discount_gym = 0,
weight_mgmt = 0,
cancer_prevention = 0,
heart_screenings = 0)
results
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = 0,
annual_checkup = 0,
discount_gym = 0,
weight_mgmt = 0,
cancer_prevention = 0,
heart_screenings = 0)
results
results[2]
results[1]
results[2] = c(1,2,3,4,5,6,7,8,9)
results
exp_payout = function(intervention_progs, mort_table, entry, discount) {
personal_effects = list(
safety_campaigns = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
annual_checkup = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5),
discount_gym = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
weight_mgmt = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
cancer_prevention = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 9),
heart_screenings = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5)
)
# SIMULATING EFFECTS, COSTS AND PARTICIPATION IN INTERVENTIONS
total_yearly_fee = 0
for (idx in 1:length(intervention_progs)) {
prog = intervention_progs[[idx]]
name = names(intervention_progs)[idx]
if (runif(1) <= prog$signup) {
cost = prog$sub_rate * runif(1, prog$cost_l, prog$cost_u)
personal_effects[[name]] = list(
participation = TRUE,
effect = runif(1, prog$effect_l, prog$effect_u),
cost = cost,
horizon = prog$horizon
)
total_yearly_fee = total_yearly_fee + cost
}
}
# print(personal_effects)
mort_reduction = 0
cum_surv = 1
exp_payout = 0
exp_cost = 0
normal_payout = 0
# TO REMOVE
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
normal_payout = normal_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
# print(paste("Mortality reduction", mort_reduction))
# print(paste("Prob of dying between", i-1, "and", i))
}
cum_surv = 1
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
# Managing mortality reductions
for (p in 1:length(personal_effects)) {
prog = personal_effects[[p]]
if (prog$participation && i - entry$issue_age <= prog$horizon) {
# print(paste("Effect on", names(personal_effects)[p]))
mort_reduction = mort_reduction + prog$effect / prog$horizon
}
}
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
exp_payout = exp_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
exp_cost = exp_cost + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * total_yearly_fee * annuity_due(i - entry$issue_age, discount)
# print(paste("Prob of dying between", i-1, "and", i))
}
print(paste("Yearly:", total_yearly_fee))
# print(paste("Mortality reduction", mort_reduction))
participations = rep(FALSE, 6)
for (i in 1:length(personal_effects)) {
names(participations)[i] = names(personal_effects)[i]
if (personal_effects[[i]]$participation) {
participations[i] = TRUE
}
}
append(list(normal_epv = normal_payout * entry$face_amount, reduced_epv = exp_payout * entry$face_amount, cost = exp_cost), participations)
}
exp_payout(intervention_progs, mort_table, example, 0.02)
results = rbind(results, exp_payout(intervention_progs, mort_table, example, 0.02))
reuslts
results
data_2023 = ins_data[issue_year == 2023]
data_2023[1]
data_2023[2]
data_2023[3]
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = FALSE,
annual_checkup = FALSE,
discount_gym = FALSE,
weight_mgmt = FALSE,
cancer_prevention = FALSE,
heart_screenings = FALSE)
data_2023 = ins_data[issue_year == 2023]
for (i in 1:1000) {
# print(ins_data[issue_year == 2023][i])
results = rbind(results, exp_payout(intervention_progs, mort_table, data_2023[i], 0.02)
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
data_2023 = ins_data[issue_year == 2023]
for (i in 1:1000) {
# print(ins_data[issue_year == 2023][i])
results = rbind(results, exp_payout(intervention_progs, mort_table, data_2023[i], 0.02))
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
View(results)
View(results)
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = FALSE,
annual_checkup = FALSE,
discount_gym = FALSE,
weight_mgmt = FALSE,
cancer_prevention = FALSE,
heart_screenings = FALSE)
data_2023 = ins_data[issue_year == 2023]
for (i in 1:10000) {
# print(ins_data[issue_year == 2023][i])
results = rbind(results, exp_payout(intervention_progs, mort_table, data_2023[i], 0.02))
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
View(reuslts)
View(results)
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = FALSE,
annual_checkup = FALSE,
discount_gym = FALSE,
weight_mgmt = FALSE,
cancer_prevention = FALSE,
heart_screenings = FALSE)
data_2023 = ins_data[issue_year == 2023]
for (i in 1:nrow(data_2023)) {
if (i % 1000 == 0) {
if (1 % 1000)
if (1 % 1000) { print("mason")}
1 % 1000
%%
1 %% 1000
1001 %% 1000
1003 %% 1000
data_2023 = ins_data[issue_year == 2023]
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = FALSE,
annual_checkup = FALSE,
discount_gym = FALSE,
weight_mgmt = FALSE,
cancer_prevention = FALSE,
heart_screenings = FALSE)
data_2023 = ins_data[issue_year == 2023]
for (i in 1:nrow(data_2023)) {
if (i %% 1000 == 0) {
print(paste("BING BONG:", i))
}
# print(ins_data[issue_year == 2023][i])
results = rbind(results, exp_payout(intervention_progs, mort_table, data_2023[i], 0.02))
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
exp_payout = function(intervention_progs, mort_table, entry, discount) {
personal_effects = list(
safety_campaigns = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
annual_checkup = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5),
discount_gym = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
weight_mgmt = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 1),
cancer_prevention = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 9),
heart_screenings = list(participation = FALSE, effect = NULL, cost = NULL, horizon = 5)
)
# SIMULATING EFFECTS, COSTS AND PARTICIPATION IN INTERVENTIONS
total_yearly_fee = 0
for (idx in 1:length(intervention_progs)) {
prog = intervention_progs[[idx]]
name = names(intervention_progs)[idx]
if (runif(1) <= prog$signup) {
cost = prog$sub_rate * runif(1, prog$cost_l, prog$cost_u)
personal_effects[[name]] = list(
participation = TRUE,
effect = runif(1, prog$effect_l, prog$effect_u),
cost = cost,
horizon = prog$horizon
)
total_yearly_fee = total_yearly_fee + cost
}
}
# print(personal_effects)
mort_reduction = 0
cum_surv = 1
exp_payout = 0
exp_cost = 0
normal_payout = 0
# TO REMOVE
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
normal_payout = normal_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
# print(paste("Mortality reduction", mort_reduction))
# print(paste("Prob of dying between", i-1, "and", i))
}
cum_surv = 1
for (i in (entry$issue_age + 1):(entry$policy_end_age)) {
# Managing mortality reductions
for (p in 1:length(personal_effects)) {
prog = personal_effects[[p]]
if (prog$participation && i - entry$issue_age <= prog$horizon) {
# print(paste("Effect on", names(personal_effects)[p]))
mort_reduction = mort_reduction + prog$effect / prog$horizon
}
}
if (i > entry$issue_age + 1) {
cum_surv = cum_surv * exp(-mort_table[i-1] * (1 - mort_reduction))
# print(paste("Prob of surviving to", i-1))
}
exp_payout = exp_payout + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * (1 - discount)^(i - entry$issue_age)
exp_cost = exp_cost + cum_surv * (1 - exp(-mort_table[i] * (1 - mort_reduction))) * total_yearly_fee * annuity_due(i - entry$issue_age, discount)
# print(paste("Prob of dying between", i-1, "and", i))
}
# print(paste("Mortality reduction", mort_reduction))
participations = rep(FALSE, 6)
for (i in 1:length(personal_effects)) {
names(participations)[i] = names(personal_effects)[i]
if (personal_effects[[i]]$participation) {
participations[i] = TRUE
}
}
append(list(normal_epv = normal_payout * entry$face_amount, reduced_epv = exp_payout * entry$face_amount, cost = exp_cost), participations)
}
results = data.table(normal_epv = 0, reduced_epv = 0, cost = 0,
safety_campaigns = FALSE,
annual_checkup = FALSE,
discount_gym = FALSE,
weight_mgmt = FALSE,
cancer_prevention = FALSE,
heart_screenings = FALSE)
data_2023 = ins_data[issue_year == 2023]
for (i in 1:nrow(data_2023)) {
if (i %% 1000 == 0) {
print(paste("BING BONG:", i))
}
# print(ins_data[issue_year == 2023][i])
results = rbind(results, exp_payout(intervention_progs, mort_table, data_2023[i], 0.02))
# print(paste("Reduction:", res$normal_epv, "-", res$reduced_epv, "=", res$normal_epv - res$reduced_epv))
# print(paste("Cost:", res$cost))
}
saveRDS(results, "Data/prelim_results.RDS")
mog = readRDS("Data/prelim_results.RDS")
View(results)
results = results[2:nrow(results)]
colMeans(results)
results[, profit := normal_epv - reduced_epv - cost]
View(results)
colMeans(results)
colSums(results)
colMeans(results)
options(scipen = 100)
colMeans(results)
6418 * 64000
plot_df = pivot_longer(results, 5:ncol(results))
plot_df
plot_df = pivot_longer(results, cols = 5:(ncol(results) - 1))
plot_df
ggplot(plot_df, aes(name, profit))
ggplot(plot_df, aes(name, profit)) + geom_violin()
help(pivot_longer)
data = results[FALSE]
data
data = results == FALSE
data
data = results
data[results == FALSE] = NA
data
plot_df = pivot_longer(results, cols = 5:(ncol(results) - 1), values_drop_na = TRUE)
plot_df
data
results
data
plot_df = pivot_longer(data, cols = 5:(ncol(results) - 1), values_drop_na = TRUE)
plot_df
plot_df = pivot_longer(data, cols = 4:(ncol(results) - 1), values_drop_na = TRUE)
plot_df
head(plot_df, n = 20)
plot_df$name = factor(plot_df$name)
ggplot(plot_df, aes(x = name, y = profit, fill = name)) + geom_violin
ggplot(plot_df, aes(x = name, y = profit, fill = name)) + geom_violin()
